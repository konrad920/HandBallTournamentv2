// <auto-generated />
using HandBallTournamentv2.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HandBallTournamentv2.DataAccess.Migrations
{
    [DbContext(typeof(TournamentEntitiesContext))]
    [Migration("20230825083335_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClubMatch", b =>
                {
                    b.Property<int>("ClubsId")
                        .HasColumnType("int");

                    b.Property<int>("MatchesId")
                        .HasColumnType("int");

                    b.HasKey("ClubsId", "MatchesId");

                    b.HasIndex("MatchesId");

                    b.ToTable("ClubMatch");
                });

            modelBuilder.Entity("HandBallTournamentv2.DataAccess.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfClub")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameOfStadium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("HandBallTournamentv2.DataAccess.Entities.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClubId")
                        .IsUnique();

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("HandBallTournamentv2.DataAccess.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Audience")
                        .HasColumnType("int");

                    b.Property<int>("HostClubId")
                        .HasColumnType("int");

                    b.Property<int>("HostPoints")
                        .HasColumnType("int");

                    b.Property<int>("HostScore")
                        .HasColumnType("int");

                    b.Property<int>("QuestClubId")
                        .HasColumnType("int");

                    b.Property<int>("QuestPoints")
                        .HasColumnType("int");

                    b.Property<int>("QuestScore")
                        .HasColumnType("int");

                    b.Property<float>("TicketCost")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("HandBallTournamentv2.DataAccess.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ClubMatch", b =>
                {
                    b.HasOne("HandBallTournamentv2.DataAccess.Entities.Club", null)
                        .WithMany()
                        .HasForeignKey("ClubsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HandBallTournamentv2.DataAccess.Entities.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HandBallTournamentv2.DataAccess.Entities.Coach", b =>
                {
                    b.HasOne("HandBallTournamentv2.DataAccess.Entities.Club", "Club")
                        .WithOne("Coach")
                        .HasForeignKey("HandBallTournamentv2.DataAccess.Entities.Coach", "ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("HandBallTournamentv2.DataAccess.Entities.Player", b =>
                {
                    b.HasOne("HandBallTournamentv2.DataAccess.Entities.Club", "Club")
                        .WithMany("Players")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("HandBallTournamentv2.DataAccess.Entities.Club", b =>
                {
                    b.Navigation("Coach")
                        .IsRequired();

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
